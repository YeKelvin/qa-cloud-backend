[tool.poetry]
name = "qa-cloud-backend"
version = "0.1.0"
description = ""
authors = ["Kelvin.Ye <testmankelvin@163.com>"]

# https://pypi.org/classifiers/
#classifiers = [
#    ""
#]

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple"
default = true

#[[tool.poetry.source]]
#name = "tsinghua"
#url = "https://pypi.tuna.tsinghua.edu.cn/simple"
#default = true

[tool.poetry.dependencies]
python = "^3.8"
# Flask
flask = "2.2.2"
flask-sqlalchemy = "2.5.1"
flask-socketio = "5.3.1"
flask-migrate = "3.1.0"
flask-apscheduler = "1.12.4"
apscheduler = "3.9.1"
# Json
orjson = "3.8.0"
jsonpath = "0.82"
# Encryption
pyjwt = { version = "2.4.0", extras = ["crypto"] }
pycryptodome = "3.15.0"
# Data Validation
pydantic = "1.10.2"
# Environment
python-dotenv = "0.21.0"
environs = "9.5.0"
# HTTP
requests="*"
# Coroutine
gevent = "*"
# 私仓依赖
pymeter = { path = "../pymeter", develop = true }

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-html = "*"
flake8 = "*"
yapf = "*"
isort = "*"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "pycharm"
line_length = 120
force_single_line = true
multi_line_output = 3
skip_glob = ["migrations/*"]

#[tool.yapf]
#based-on_style = "google"
#arithmetic_precedence_indication = true
#blank_line_before_nested_class_or_def = true
#blank_lines_between_top_level_imports_and_variables = 2
#column_limit = 120
#coalesce_brackets = true
#dedent_closing_brackets = true
#indent_width = 4
#join_multiple_lines = true
#spaces_before_comment = 2
#split_before_dot = true
