[tool.poetry]
name = "qa-cloud-backend"
version = "0.1.0"
description = ""
authors = ["Kelvin.Ye <testmankelvin@163.com>"]
packages = [
    {include = "app"}
]

# https://pypi.org/classifiers/
#classifiers = [
#    ""
#]

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple"
default = true

[tool.poetry.dependencies]
python = "^3.8"
# Flask
flask = "2.2.2"
flask-sqlalchemy = "3.0.2"
flask-socketio = "5.3.2"
flask-migrate = "4.0.0"
flask-apscheduler = "1.12.4"
apscheduler = "3.9.1"
# Json
orjson = "3.8.2"
jsonpath = "0.82"
# Encryption
pyjwt = "2.5.0"
pycryptodome = "3.16.0"
# Environment
python-dotenv = "0.21.0"
environs = "9.5.0"
# HTTP
requests="*"
# Coroutine
gevent = "*"
# 私仓依赖
pymeter = { path = "../pymeter", develop = true }

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-html = "*"
flake8 = "*"
yapf = "*"
isort = "*"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "pycharm"
line_length = 120
force_single_line = true
multi_line_output = 3
skip_glob = ["migrations/*"]

#[tool.yapf]
#BASED_ON_STYLE = "google"
#ARITHMETIC_PRECEDENCE_INDICATION = true
#BLANK_LINE_BEFORE_NESTED_CLASS_OR_DEF = true
#BLANK_LINES_BETWEEN_TOP_LEVEL_IMPORTS_AND_VARIABLES = 2
#COLUMN_LIMIT = 120
#COALESCE_BRACKETS = true
#DEDENT_CLOSING_BRACKETS = true
#INDENT_WIDTH = 4
#JOIN_MULTIPLE_LINES = true
#SPACES_BEFORE_COMMENT = 2
#SPLIT_BEFORE_DOT = true

#[tool.yapfignore]
#ignore_patterns = [
#  "temp/**/*.py"
#]