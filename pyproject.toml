
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "qa-cloud-backend"
version = "0.1.0"
description = ""
readme = "README.md"
authors = [
    "Kelvin.Ye <testmankelvin@163.com>"
]
packages = [
    { include = "app" }
]
classifiers = [
    # https://pypi.org/classifiers/
    "Programming Language :: Python"
]

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"
priority = "default"

[[tool.poetry.source]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.11"
# flask
flask = "3.0.0"
flask-sqlalchemy = "3.1.1"
flask-socketio = "5.3.6"
flask-migrate = "4.0.5"
flask-apscheduler = "1.13.0"
# job
apscheduler = "3.10.4"
# signal
blinker = "1.6.3"
# encryption
pyjwt = "2.8.0"
# environment
environs = "9.5.0"
python-dotenv = "1.0.0"
# tool
munch = "4.0.0"
# 私仓依赖
pymeter = { path = "../pymeter", develop = true }
# 以下依赖的版本在pymeter项目中控制
ulid-py = "*"
arrow = "*"
httpx = "*"
json5 = "*"
loguru = "*"
gevent = "*"
orjson = "*"
pycryptodome = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-html = "*"
ruff = "*"
yapf = "*"
black = "*"
pre-commit = "*"

[tool.ruff]
target-version = "py311"
line-length = 120
src = ["app"]
select = [
    "F",    # pyflakes
    "UP",   # pyupgrade
    "E",    # pycodestyle-error
    "W",    # pycodestyle-warning
    "D",    # pydocstyle
    "I",    # isort
]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "D415"
]
exclude = [
    "__pycache__",
    ".cache"
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-local-folder = ["app"]
force-single-line = true
lines-after-imports = 2
lines-between-types = 1

[tool.yapf]
column_limit = 120
indent_width = 4
arithmetic_precedence_indication = true
blank_line_before_nested_class_or_def = true
blank_lines_between_top_level_imports_and_variables = 2
coalesce_brackets = true
dedent_closing_brackets = true
join_multiple_lines = true
spaces_before_comment = 2
split_before_dot = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--color=auto",
    "--capture=tee-sys",
    "--code-highlight=yes",
    "--disable-warnings",
    "--html=report.html",
    "--self-contained-html"
]
log_cli = true
log_level = "INFO"
log_format = "[%(asctime)s][%(levelname)s][%(name)s.%(funcName)s:%(lineno)d] %(message)s"
python_files = ["*_test.py", "*_example.py"]
python_classes = "*TestSuite"
python_functions = "test_*"
filterwarnings = ["error", "ignore::DeprecationWarning"]
required_plugins = ["pytest-html"]
