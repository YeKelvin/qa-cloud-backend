[uwsgi]
# 进程文件
pidfile = /run/uwsgi.pid
# 当配合 Nginx 使用时，可以使用 socket 进行通信
socket = 0.0.0.0:5000
chmod-socket = 666
; http = 0.0.0.0:5000
# flask 对象
module = main:app
# flask应用实例的名称，是flask独有的配置项
callable = app
# master 进程
master = true
# 进程数，可设为机器核数+1
processes = 1
# 每个进程的线程数
; threads = 20
; enable-threads = true
# 开启 websocket
http-websockets = true
gevent = 1000
# 为每个工作进程设置请求数的上限。当处理的请求总数超过这个量，进程回收重启。
max-requests = 5000
# 默认值为4096，如果请求数据超过这个值就会报错，这里设置为 64k
; buffer-size=65536
# 如果请求体的大小超过指定的限制，打开 http-body 缓冲，这里设置为 64k
; post-buffering=65536
# 在每个 worker 而不是 master 中加载应用
; lazy-apps = true
# 当服务器退出的时候自动删除 unix socket 文件和 pid 文件
vacuum = true
; die-on-term = true
# 避免惊群效应
; thunder-lock = true
# 请求超时时间（秒）, 当一个请求花费的时间超过这个时间，那么这个请求都会被丢弃
; harakiri = 60
# 当请求被 harakiri 杀掉时会输出一条日志
; harakiri-verbose=true
#设置平滑的重启（直到处理完接收到的请求）的长等待时间(秒)
; reload-mercy=10